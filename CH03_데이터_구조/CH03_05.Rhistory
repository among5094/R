# CH03.03 요인
gender<-c("남", "남", "여") #성별 벡터 데이터
gender
gender.factor <- factor(gender) # 성별 벡터를 성별 요인으로 변환
gender.factor
# 데이터의 그룹 라벨 정보
# CH03.04 배열
x<-c(70,80,75)
arr<-array(x)
arr
#x벡터 데이터를 1차원 배열로 변환하기
z<-1:6
arr<-array(z, dim=c(2,3))
arr
# '열'부터 배치시작
name <-list(c("장발장", "자베르", "팡틴"), c("국어", "음악"))
score <- c(70,80,80,75,75,90)
arr<- array(score.dim=(3,2), dimnames=name) #배열을 만들 때 행,열과 이름 설정
arr<- array(score, dim=(3,2), dimnames=name) #배열을 만들 때 행,열과 이름 설정
arr <- array(score, dim = c(3, 2), dimnames = name)
arr
# 배열 수정과 원소 출력
arr[3,2]<-95
arr[3,2]
arr[1,]
arr[,2] #2열 데이터
# 행렬
x<-1:6
x
mtx<-matrix(x, nrow=2)
mtx
name <-list(c("1행", "2행"), c("1열", "2열", "3열"))
mtx<-matrix(x, nrow=2, dimnames=name, byrow=TRUE)
mtx
# byrow=TRUE는 데이터 배치 순서를 "행 우선순위"로 만듦
y <-c(7,8,9)
y
mtx<- rbind(mtx,y) #mtx 행렬에 y벡터를 행 단위로 추가
rownames(mtx)[3] <-"3행"
mtx
# row bind: 새로운 행 추가
z<-c(10,11,12)
z
mtx <-cbind(mtx,z)
colnames(mtx)[4]<-"4열"
mtx
# col bind: 새로운 열 추가
# CH03.05 리스트
# R에서 리스트는 유연하고 강력한 데이터 구조임.
# 서로 다른 데이터 유형을 담을 수 있는 컨테이너 역할을 함.
#장발장 리스트
lst1 <- list(성명="장발장", 나이=40, 성적=c(70,80))
lst1
#성별 리스트
lst1.gender<-list(성별="남")
#장발장 리스트에 성별 리스트 추가
lst1 <- append(lst1, lst1.gender, after=1)
lst1
#after=1은 첫번째 요소 다음에 추가하라는 뜻. 성명 밑에 추가되어있음
# 팡틴 리스트
lst2<-list(성명="팡틴", 성별="여", 나이=30, 성적=c(75,90))
lst2
# 리스트 세트
lst <- list(lst1, lst2)
lst
# 장발장 리스트 출력
lst[1]
lst[[1]] #장발장 리스트의 첫번째 원소(이름) 출력
lst[[1]][1] # 장발장 리스트의 첫 번째 원소(이름)출력
lst[[1]][[1]] # 장발장 리스트의 첫 번째 요소의 값
lst[[1]]$성명 # 장발장 리스트의 성명 요소
